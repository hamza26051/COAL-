INCLUDE Irvine32.inc

.data
    fib1 DWORD 0       ; First Fibonacci number
    fib2 DWORD 1       ; Second Fibonacci number
    count DWORD 10    

.code
main PROC
    mov  eax, fib1    ; Load first Fibonacci number
    call WriteDec     ; Print first number
    call Crlf         
    
    mov  eax, fib2    ; Load second Fibonacci number
    call WriteDec     ; Print second number
    call Crlf         
    
    mov  ecx, count
    sub  ecx, 2       ; Already printed first two numbers

fib_loop:
    mov  edx, fib1    ; Save fib1 in edx
    add  edx, fib2    ; Compute next Fibonacci number
    
    mov  eax, edx     ; Load next number in eax
    call WriteDec     
    call Crlf        
    
    mov  eax, fib2    ; Move fib2 into eax
    mov  fib1, eax    ; Store new fib1 value

    mov  eax, edx     ; Move computed Fibonacci number into eax
    mov  fib2, eax    ; Store it into fib2
    
    dec ecx           ; Decrement counter
    jnz fib_loop      ; Jump if not zero

    exit
main ENDP
END mainINCLUDE Irvine32.inc

.data
    fib1 DWORD 0       ; First Fibonacci number
    fib2 DWORD 1       ; Second Fibonacci number
    count DWORD 10    

.code
main PROC
    mov  eax, fib1    ; Load first Fibonacci number
    call WriteDec     ; Print first number
    call Crlf         
    
    mov  eax, fib2    ; Load second Fibonacci number
    call WriteDec     ; Print second number
    call Crlf         
    
    mov  ecx, count
    sub  ecx, 2       ; Already printed first two numbers

fib_loop:
    mov  edx, fib1    ; Save fib1 in edx
    add  edx, fib2    ; Compute next Fibonacci number
    
    mov  eax, edx     ; Load next number in eax
    call WriteDec     
    call Crlf        
    
    mov  eax, fib2    ; Move fib2 into eax
    mov  fib1, eax    ; Store new fib1 value

    mov  eax, edx     ; Move computed Fibonacci number into eax
    mov  fib2, eax    ; Store it into fib2
    
    dec ecx           ; Decrement counter
    jnz fib_loop      ; Jump if not zero

    exit
main ENDP
END mainINCLUDE Irvine32.inc

.data
    fib1 DWORD 0       ; First Fibonacci number
    fib2 DWORD 1       ; Second Fibonacci number
    count DWORD 10    

.code
main PROC
    mov  eax, fib1    ; Load first Fibonacci number
    call WriteDec     ; Print first number
    call Crlf         
    
    mov  eax, fib2    ; Load second Fibonacci number
    call WriteDec     ; Print second number
    call Crlf         
    
    mov  ecx, count
    sub  ecx, 2       ; Already printed first two numbers

fib_loop:
    mov  edx, fib1    ; Save fib1 in edx
    add  edx, fib2    ; Compute next Fibonacci number
    
    mov  eax, edx     ; Load next number in eax
    call WriteDec     
    call Crlf        
    
    mov  eax, fib2    ; Move fib2 into eax
    mov  fib1, eax    ; Store new fib1 value

    mov  eax, edx     ; Move computed Fibonacci number into eax
    mov  fib2, eax    ; Store it into fib2
    
    dec ecx           ; Decrement counter
    jnz fib_loop      ; Jump if not zero

    exit
main ENDP
END main
